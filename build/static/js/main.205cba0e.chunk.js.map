{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","components/ŸêAbout.js","components/Favorite.js","App.js","reportWebVitals.js","index.js","screens/HomeScreen.module.css"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","keyword","setKeyword","useState","history","useHistory","_jsx","Form","onSubmit","e","preventDefault","push","location","pathname","className","children","_jsxs","Control","name","placeholder","onChange","target","value","Button","variant","getUserDetails","id","async","dispatch","getState","config","headers","Authorization","token","data","axios","get","response","detail","message","Header","_ref","match","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","LinkContainer","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","onClick","logoutHandler","removeItem","isAdmin","Footer","Row","Col","md","href","Rating","text","color","style","ProductCard","isFavorite","setIsFavorite","is_favorite","Card","_id","Img","src","image","alt","Body","Title","as","Text","rating","numReviews","FaHeart","_JSON$parse","accessToken","access","Error","fetch","productId","method","ok","console","deleteFavorite","body","stringify","json","toggleFavorite","price","Loader","Spinner","animation","role","height","width","margin","display","Message","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","resdata","listProductDetails","ProductCarousel","useEffect","Carousel","pause","indicators","controls","Image","fluid","Caption","HomeScreen","search","styles","container","carouselContainer","heading","loaderContainer","errorContainer","rowSpacing","sm","lg","xl","Product","productCard","paginationContainer","ProductScreen","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","ListGroup","description","countInStock","xs","addToCartHandler","disabled","review","createdAt","substring","createProductReview","post","Group","controlId","Label","row","addToCart","setItem","CartScreen","Number","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","checkoutHandler","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","placeOrder","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","addPayPalScript","script","document","createElement","onload","appendChild","Id","isDelivered","deliveredAt","PayPalButton","amount","onSuccess","paymentResult","payOrder","deliverHandler","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","createProductHandler","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","updateProduct","File","custom","file","files","formData","FormData","append","OrderListScreen","AboutUs","roundedCircle","Favorite","favoriteProducts","setFavoriteProducts","setLoading","setError","fetchFavorites","App","Router","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Provider","getElementById","module","exports"],"mappings":"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","file":"static/js/main.205cba0e.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\n\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n    productListReducer,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n} from './reducers/productReducers'\n\nimport { cartReducer } from './reducers/cartReducers'\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer,\n} from './reducers/userReducers'\n\nimport {\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload, }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n\n    CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\n\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state,\n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n} from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport './Header.css'; // Import custom CSS for styling\n\nfunction SearchBox() {\n  const [keyword, setKeyword] = useState('');\n\n  let history = useHistory();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword) {\n      history.push(`/?keyword=${keyword}&page=1`);\n    } else {\n      history.push(history.location.pathname);\n    }\n  };\n\n  return (\n    <Form onSubmit={submitHandler} className=\"search-form\">\n      <div className=\"search-box-container\">\n        <Form.Control\n          type=\"text\"\n          name=\"q\"\n          placeholder=\"Search...\"\n          onChange={(e) => setKeyword(e.target.value)}\n          className=\"search-input\"\n        />\n        <Button type=\"submit\" variant=\"outline-light\" className=\"search-button\">\n          <i className=\"fas fa-search\"></i>\n        </Button>\n      </div>\n    </Form>\n  );\n}\n\nexport default SearchBox;\n","import axios from 'axios'\nimport {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            { 'username': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/register/',\n            { 'name': name, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/profile/update/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport SearchBox from \"./SearchBox\";\nimport { logout } from \"../actions/userActions\";\nimport \"./Header.css\"; // Import custom CSS for styling\n\nimport { useHistory } from 'react-router-dom';\nfunction Header({match}) {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n  const history = useHistory()\n  const logoutHandler = () => {\n    dispatch(logout()); \n    history.push('/')\n  };\n\n  //adding span\n  \n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n          {/* <img\n           src=\"\" // Replace with your logo URL\n            alt=\"Simply Market Logo\"\n             className=\"logo\"\n           /> */}\n            <Navbar.Brand > <span className=\"brand-name\">  Simply</span> </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <SearchBox className=\"modern-search\" />\n            <Nav className=\"ml-auto\">\n              {userInfo ? (\n                <LinkContainer to=\"/cart\">\n                  <Nav.Link>\n                    <i className=\"fas fa-shopping-cart cart\"></i> Cart\n                  </Nav.Link>\n                </LinkContainer>\n              ) : (\n                <div></div>\n              )}\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i> Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown\n                  title=\"Admin\"\n                  id=\"adminmenue\"\n                  className=\"nav-dropdown\"\n                >\n                  <LinkContainer to=\"/admin/userlist\">\n                    <NavDropdown.Item\n                      className=\"nav-dropdown-item\"\n                      to=\"/admin/userlist\"\n                    >\n                      <i className=\"fas fa-users nav-dropdown-icon\"></i> Users\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/productlist\">\n                    <NavDropdown.Item className=\"nav-dropdown-item\">\n                      <i className=\"fas fa-box nav-dropdown-icon\"></i> Products\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to=\"/admin/orderlist\">\n                    <NavDropdown.Item>\n                      <i className=\"fas fa-receipt nav-dropdown-icon\"></i>{\" \"}\n                      Orders\n                    </NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n\n              <LinkContainer to=\"/about\">\n                <Nav.Link>\n                  <i className=\"about\"></i> About Us\n               </Nav.Link>\n              </LinkContainer>\n              {userInfo &&\n              <LinkContainer to=\"/favorite\">\n              <Nav.Link>\n              <i className=\"fav\"></i> Favorite\n              </Nav.Link>\n\n              </LinkContainer>}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport \"./footer.css\"; // ÿßÿ≥ÿ™Ÿäÿ±ÿßÿØ ŸÖŸÑŸÅ CSS ŸÑÿ™ŸÜÿ≥ŸäŸÇ ÿßŸÑÿµŸÅÿ≠ÿ©\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; Simply</Col>\n                </Row>\n                <Row>\n                    <Col md={4} className=\"text-center py-2\">\n                        <h6>Contact Us:</h6>\n                        <p>Email: simply9990@gmail.com</p>\n                        </Col>\n\n                    <Col md={4} className=\"text-center py-2\">\n                        <h6>Address:</h6>\n                        <p>Syria</p>\n                        <p>Damsacous - Mazzah</p>\n                    </Col>\n                    <Col md={4} className=\"text-center py-2\">\n                        <h6>Follow Us:</h6>\n                        <p>\n                            <a href=\"https://www.facebook.com\">Facebook</a> | \n                            <a href=\"https://www.twitter.com\">Twitter</a> |\n                            <a href=\"https://www.instagram.com\">Instagram</a>\n                        </p>\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>{text && text}</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport Rating from './Rating';\nimport { Link } from 'react-router-dom';\nimport './Product.css'; // Import the CSS file\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; \nimport { useSelector } from 'react-redux'; \nimport { FaHeart } from \"react-icons/fa\";\nfunction ProductCard({ product }) {\n    const userInfo = useSelector((state) => state.userLogin.userInfo);\n    const [isFavorite, setIsFavorite] = useState(product.is_favorite);\n\n    const toggleFavorite = async () => {\n        if (!userInfo) return;\n\n        try {\n            const response = await fetch(`/api/products/favorites/`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${userInfo.access}`,\n                },\n                body: JSON.stringify({ id: product._id }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to update favorite status');\n            }\n\n            const data = await response.json();\n            setIsFavorite(true);\n        } catch (error) {\n            console.error('Error updating favorite status:', error);\n        }\n    };\n\n    const deleteFavorite = async (productId) => {\n      if (!userInfo) return;\n\n      try {\n          const accessToken = JSON.parse(localStorage.getItem('userInfo'))?.access;\n          if (!accessToken) throw new Error('Access token is missing');\n\n          const response = await fetch(`/api/products/favorites/${productId}`, {\n              method: 'DELETE',\n              headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': `Bearer ${accessToken}`,\n              },\n          });\n\n          if (!response.ok) {\n              throw new Error('Failed to delete favorite');\n          }\n\n          setIsFavorite(false)\n           \n      } catch (error) {\n          console.error('Error deleting favorite:', error);\n      }\n  };\n\n  \n    return (\n        <Card className=\"product-card my-3 p-3 rounded glass-effect\">\n            <Link to={`/product/${product._id}`} className=\"card-link\">\n                <Card.Img src={product.image} alt={product.name} className=\"product-img\" />\n                <div className=\"overlay\">\n                    <div className=\"overlay-content\">View Details</div>\n                </div>\n            </Link>\n\n            <Card.Body className=\"card-body\">\n                <Link to={`/product/${product._id}`} className=\"card-link\">\n                    <Card.Title as=\"div\">\n                        <strong className=\"product-name\">{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\" className=\"rating-container\">\n                    <div className=\"my-3\">\n                        <Rating\n                            value={product.rating}\n                            text={`${product.numReviews} reviews`}\n                            color={'#f1c40f'}\n                        />\n                    </div>\n                </Card.Text>\n\n                {userInfo && (\n                    <FaHeart\n                    className={`${isFavorite ? \"text-red-600\" : \"text-slate-500\"\n                      } hover:cursor-pointer`}\n                    onClick={ () => {if (isFavorite) {\n                      deleteFavorite(product._id);\n                  } else {\n                      toggleFavorite();\n                  } }}\n                  />\n                )}\n\n                <Card.Text as=\"h3\" className=\"product-price\">\n                    <span className=\"price-symbol\">$</span>\n                    <span className=\"price-value\">{product.price}</span>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default ProductCard;\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation='border'\n            role='status'\n            style={{\n                height: '100px',\n                width: '100px',\n                margin: 'auto',\n                display: 'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch,getState) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        let resdata \n        if(userInfo?.token)\n        {const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo?.token}`\n            }\n        }\n\n         const{ data } = await axios.get(\n           `/api/products${keyword}`  ,\n            config\n        )\n    \n        resdata = data\n    }\n        else{\n           const   { data } = await axios.get(\n                `/api/products${keyword}` )\n        resdata = data\n        }\n         \n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: resdata\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        \n       \n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n \n\n\n\nexport const getFavorits = () => async (dispatch, getState) => {\n    try { \n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/products/favorites/`,\n            {},\n            config\n        ) \n\n\n    } catch (error) {\n        \n    }\n}\n\n\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\nimport './ProductCarousel.css' // Import the CSS file\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (\n        loading ? <Loader />\n            : error\n                ? <Message variant='danger'>{error}</Message>\n                : (\n                    <Carousel pause='hover' className='product-carousel' indicators={true} controls={true}>\n                        {products.map(product => (\n                            <Carousel.Item key={product._id}>\n                                <Link to={`/product/${product._id}`} className='carousel-link'>\n                                    <Image src={product.image} alt={product.name} fluid className='carousel-image' />\n                                    <Carousel.Caption className='carousel-caption'>\n                                        <h4 className='carousel-title'>{product.name}</h4>\n                                        <p className='carousel-price'>${product.price}</p>\n                                    </Carousel.Caption>\n                                </Link>\n                            </Carousel.Item>\n                        ))}\n                    </Carousel>\n                )\n    )\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container, Spinner } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\nimport styles from './HomeScreen.module.css' // Import the CSS module\n\nfunction HomeScreen({ history }) {\n    const dispatch = useDispatch()\n    const productList = useSelector(state => state.productList)\n    const { error, loading, products, page, pages } = productList\n\n    const keyword = history.location.search\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n    }, [dispatch, keyword])\n\n    return (\n        <Container fluid className={styles.container}>\n            {!keyword && (\n                <div className={styles.carouselContainer}>\n                    <ProductCarousel />\n                </div>\n            )}\n\n            <div className=\"text-center mb-4\">\n                <h1 className={styles.heading}>Latest Products</h1>\n            </div>\n\n            {loading ? (\n                <div className={styles.loaderContainer}>\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                </div>\n            ) : error ? (\n                <div className={styles.errorContainer}>\n                    <Message variant=\"danger\">{error}</Message>\n                </div>\n            ) : (\n                <div>\n                    <Row className={styles.rowSpacing}>\n                        {products.map(product => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3} className={styles.rowSpacing}>\n                                <Product className={styles.productCard} product={product} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <div className={styles.paginationContainer}>\n                        <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n                </div>\n            )}\n        </Container>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nfunction ProductScreen({ match, history }) {\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <div>\n                            <Row>\n                                <Col md={6}>\n                                    <Image src={product.image} alt={product.name} fluid />\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <ListGroup variant=\"flush\">\n                                        <ListGroup.Item>\n                                            <h3>{product.name}</h3>\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Price: ${product.price}\n                                        </ListGroup.Item>\n\n                                        <ListGroup.Item>\n                                            Description: {product.description}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n\n\n                                <Col md={3}>\n                                    <Card>\n                                        <ListGroup variant='flush'>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Price:</Col>\n                                                    <Col>\n                                                        <strong>${product.price}</strong>\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Status:</Col>\n                                                    <Col>\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n\n                                            {product.countInStock > 0 && (\n                                                <ListGroup.Item>\n                                                    <Row>\n                                                        <Col>Qty</Col>\n                                                        <Col xs='auto' className='my-1'>\n                                                            <Form.Control\n                                                                as=\"select\"\n                                                                value={qty}\n                                                                onChange={(e) => setQty(e.target.value)}\n                                                            >\n                                                                {\n\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                                        <option key={x + 1} value={x + 1}>\n                                                                            {x + 1}\n                                                                        </option>\n                                                                    ))\n                                                                }\n\n                                                            </Form.Control>\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            )}\n\n\n                                            <ListGroup.Item>\n                                                <Button\n                                                    onClick={addToCartHandler}\n                                                    className='btn-block'\n                                                    disabled={product.countInStock == 0}\n                                                    type='button'>\n                                                    Add to Cart\n                                                </Button>\n                                            </ListGroup.Item>\n                                        </ListGroup>\n                                    </Card>\n                                </Col>\n                            </Row>\n\n                            <Row>\n                                <Col md={6}>\n                                    <h4>Reviews</h4>\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                    <ListGroup variant='flush'>\n                                        {product.reviews.map((review) => (\n                                            <ListGroup.Item key={review._id}>\n                                                <strong>{review.name}</strong>\n                                                <Rating value={review.rating} color='#f8e825' />\n                                                <p>{review.createdAt.substring(0, 10)}</p>\n                                                <p>{review.comment}</p>\n                                            </ListGroup.Item>\n                                        ))}\n\n                                        <ListGroup.Item>\n                                            <h4>Write a review</h4>\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(e) => setRating(e.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='primary'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                </Col>\n                            </Row>\n                        </div>\n                    )\n\n            }\n\n\n        </div >\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                {cartItems.length === 0 ? (\n                    <Message variant='info'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                        <ListGroup variant='flush'>\n                            {cartItems.map(item => (\n                                <ListGroup.Item key={item.product}>\n                                    <Row>\n                                        <Col md={2}>\n                                            <Image src={item.image} alt={item.name} fluid rounded />\n                                        </Col>\n                                        <Col md={3}>\n                                            <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                        </Col>\n\n                                        <Col md={2}>\n                                            ${item.price}\n                                        </Col>\n\n                                        <Col md={3}>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={item.qty}\n                                                onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\n                                            >\n                                                {\n\n                                                    [...Array(item.countInStock).keys()].map((x) => (\n                                                        <option key={x + 1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n\n                                        <Col md={1}>\n                                            <Button\n                                                type='button'\n                                                variant='light'\n                                                onClick={() => removeFromCartHandler(item.product)}\n                                            >\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                    )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                        </ListGroup.Item>\n                    </ListGroup>\n\n                    <ListGroup.Item>\n                        <Button\n                            type='button'\n                            className='btn-block'\n                            disabled={cartItems.length === 0}\n                            onClick={checkoutHandler}\n                        >\n                            Proceed To Checkout\n                        </Button>\n                    </ListGroup.Item>\n\n\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New Customer? <Link\n                        to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                        Register\n                        </Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n    }\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        required\n                        type='name'\n                        placeholder='Enter name'\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Confirm Password'\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Register\n                </Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Have an Account? <Link\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                        Sign In\n                        </Link>\n                </Col>\n            </Row>\n        </FormContainer >\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\nfunction ProfileScreen({ history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if (password != confirmPassword) {\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password\n            }))\n            setMessage('')\n        }\n\n    }\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n\n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter name'\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n\n                            type='password'\n                            placeholder='Confirm Password'\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type='submit' variant='primary'>\n                        Update\n                </Button>\n\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My Orders</h2>\n                {loadingOrders ? (\n                    <Loader />\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                            <Table striped responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>Date</th>\n                                        <th>Total</th>\n                                        <th>Paid</th>\n                                        <th>Delivered</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0, 10)}</td>\n                                            <td>${order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button className='btn-sm'>Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                        )}\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen","import axios from 'axios'\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Login</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Shipping</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Payment</Nav.Link>\n                    )}\n            </Nav.Item>\n\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                        <Nav.Link disabled>Place Order</Nav.Link>\n                    )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter address'\n                        value={address ? address : ''}\n                        onChange={(e) => setAddress(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter city'\n                        value={city ? city : ''}\n                        onChange={(e) => setCity(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter postal code'\n                        value={postalCode ? postalCode : ''}\n                        onChange={(e) => setPostalCode(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        required\n                        type='text'\n                        placeholder='Enter country'\n                        value={country ? country : ''}\n                        onChange={(e) => setCountry(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type='radio'\n                            label='PayPal or Credit Card'\n                            id='paypal'\n                            name='paymentMethod'\n                            checked\n                            onChange={(e) => setPaymentMethod(e.target.value)}\n                        >\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},  {cart.shippingAddress.city}\n                                {'  '}\n                                {cart.shippingAddress.postalCode},\n                                {'  '}\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message variant='info'>\n                                Your cart is empty\n                            </Message> : (\n                                    <ListGroup variant='flush'>\n                                        {cart.cartItems.map((item, index) => (\n                                            <ListGroup.Item key={index}>\n                                                <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n\n                                                    <Col>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                    </Col>\n\n                                                    <Col md={4}>\n                                                        {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                    </Col>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        ))}\n                                    </ListGroup>\n                                )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Button\n                                    type='button'\n                                    className='btn-block'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n                <div>\n                    <h1>Order: {order.Id}</h1>\n                    <Row>\n                        <Col md={8}>\n                            <ListGroup variant='flush'>\n                                <ListGroup.Item>\n                                    <h2>Shipping</h2>\n                                    <p><strong>Name: </strong> {order.user.name}</p>\n                                    <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                                    <p>\n                                        <strong>Shipping: </strong>\n                                        {order.shippingAddress.address},  {order.shippingAddress.city}\n                                        {'  '}\n                                        {order.shippingAddress.postalCode},\n                                {'  '}\n                                        {order.shippingAddress.country}\n                                    </p>\n\n                                    {order.isDelivered ? (\n                                        <Message variant='success'>Delivered on {order.deliveredAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Delivered</Message>\n                                        )}\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Payment Method</h2>\n                                    <p>\n                                        <strong>Method: </strong>\n                                        {order.paymentMethod}\n                                    </p>\n                                    {order.isPaid ? (\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\n                                    ) : (\n                                            <Message variant='warning'>Not Paid</Message>\n                                        )}\n\n                                </ListGroup.Item>\n\n                                <ListGroup.Item>\n                                    <h2>Order Items</h2>\n                                    {order.orderItems.length === 0 ? <Message variant='info'>\n                                        Order is empty\n                            </Message> : (\n                                            <ListGroup variant='flush'>\n                                                {order.orderItems.map((item, index) => (\n                                                    <ListGroup.Item key={index}>\n                                                        <Row>\n                                                            <Col md={1}>\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\n                                                            </Col>\n\n                                                            <Col>\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                            </Col>\n\n                                                            <Col md={4}>\n                                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                            </Col>\n                                                        </Row>\n                                                    </ListGroup.Item>\n                                                ))}\n                                            </ListGroup>\n                                        )}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n\n                        </Col>\n\n                        <Col md={4}>\n                            <Card>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>Order Summary</h2>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Items:</Col>\n                                            <Col>${order.itemsPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Shipping:</Col>\n                                            <Col>${order.shippingPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Tax:</Col>\n                                            <Col>${order.taxPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Total:</Col>\n                                            <Col>${order.totalPrice}</Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n\n                                    {!order.isPaid && (\n                                        <ListGroup.Item>\n                                            {loadingPay && <Loader />}\n\n                                            {!sdkReady ? (\n                                                <Loader />\n                                            ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler}\n                                                    />\n                                                )}\n                                        </ListGroup.Item>\n                                    )}\n                                </ListGroup>\n                                {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            )\n}\n\nexport default OrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <h1>Users</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [user, userId, successUpdate, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(e) => setIsAdmin(e.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n\n                <Col className='text-right'>\n                    <Button className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='light' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n        </div>\n    )\n}\n\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <h1>Orders</h1>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>Total</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-check' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='light' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n        </div>\n    )\n}\n\nexport default OrderListScreen","import React from \"react\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport \"./About.css\"; // ÿßÿ≥ÿ™Ÿäÿ±ÿßÿØ ŸÖŸÑŸÅ CSS ŸÑÿ™ŸÜÿ≥ŸäŸÇ ÿßŸÑÿµŸÅÿ≠ÿ©\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <Container className=\"about-container\">\r\n      <Row className=\"my-5\">\r\n        <Col md={12} className=\"text-center\">\r\n          <h2 className=\"about-title\">About Us</h2>\r\n          <h3> Simply </h3>\r\n          <p className=\"about-text\">\r\n          \"Welcome to our humble platform specializing in e-commerce, where we provide you with all the details about the products sold through it. Please note that our platform is dedicated to handmade products.\r\n          </p>\r\n          <p className=\"about-text\">\r\n          \"We are TIC students who came together to present this project, which represents the culmination of our years of study in this field. We hope it meets your expectations and that you enjoy it.\"\r\n          </p>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"my-5\">\r\n        {/* Person 1 */}\r\n        <Col md={4} className=\"text-center\">\r\n          <Image\r\n            src=\"https://res.cloudinary.com/duws0azyi/image/upload/v1724848154/team1_ffu0ng.jpg\"\r\n            roundedCircle\r\n            fluid\r\n            alt=\"Team Member 1\"\r\n            className=\"team-image\"\r\n          />\r\n          <h5 className=\"mt-3\">Ali Mansour</h5>\r\n          <p>ID: 219625</p>\r\n          <p>Email: mansouraaa77@gmail.com</p>\r\n          <p>Phone: (963) 0991-999235</p>\r\n        </Col>\r\n\r\n        {/* Person 2 */}\r\n        <Col md={4} className=\"text-center\">\r\n          <Image\r\n            src=\"https://res.cloudinary.com/duws0azyi/image/upload/v1724848256/team3_owfwd7.jpg\"\r\n            roundedCircle\r\n            fluid\r\n            alt=\"Team Member 2\"\r\n            className=\"team-image\"\r\n          />\r\n          <h5 className=\"mt-3\">Muna Alras</h5>\r\n          <p>ID: 67890</p>\r\n          <p>Email: monaalrass123@gmail.com</p>\r\n          <p>Phone: (963) 0946-441830</p>\r\n        </Col>\r\n\r\n        {/* Person 3 */}\r\n        <Col md={4} className=\"text-center\">\r\n          <Image\r\n            src=\"https://res.cloudinary.com/duws0azyi/image/upload/v1724847928/6951dfb8-2a07-4b06-9718-001d516855ad_gfp1vn.jpg\"\r\n            roundedCircle\r\n            fluid\r\n            alt=\"Team Member 3\"\r\n            className=\"team-image\"\r\n          />\r\n          <h5 className=\"mt-3\">Aram Alazzam</h5>\r\n          <p>ID: 159596</p>\r\n          <p>Email: aram.alazzam.2002@gmail.com</p>\r\n          <p>Phone: (963) 0934-178575</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default AboutUs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport Product from './Product'; // Import your Product component\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Favorite() {\r\n    const [favoriteProducts, setFavoriteProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const userInfo = useSelector((state) => state.userLogin.userInfo);\r\n    useEffect(() => {\r\n        const fetchFavorites = async () => {\r\n            try {\r\n                const accessToken = JSON.parse(localStorage.getItem('userInfo'))?.access;\r\n                if (!accessToken) throw new Error('Access token is missing');\r\n\r\n                const response = await fetch('/api/products/favorites', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${accessToken}`,\r\n                    },\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch favorites');\r\n                }\r\n\r\n                const data = await response.json();\r\n                setFavoriteProducts(data);\r\n            } catch (error) {\r\n                setError(error.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchFavorites();\r\n    }, [favoriteProducts]);\r\n\r\n\r\n \r\n\r\n    if (loading) return <Container><h1>Loading...</h1></Container>;\r\n\r\n    if (error) return <Container><h1>Error: {error}</h1></Container>;\r\n\r\n    return (\r\n        <Container>\r\n            <h1>Favorites</h1>\r\n            <Row>\r\n                {favoriteProducts.length === 0 ? (\r\n                    <Col>\r\n                        <p>No favorite products yet.</p>\r\n                    </Col>\r\n                ) : (\r\n                    favoriteProducts.map(product => (\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product.product} />\r\n                        </Col>\r\n                    ))\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Favorite;\r\n","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer' \n\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport AboutUs from './components/ŸêAbout'\nimport Favorite from './components/Favorite'\n\n\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} /> \n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/about' component={AboutUs } />\n          <Route path='/favorite' component={Favorite } />\n          <Route path='/admin/productlist' component={ProductListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n//import './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HomeScreen_container__VH9g7\",\"carouselContainer\":\"HomeScreen_carouselContainer__E7YB-\",\"heading\":\"HomeScreen_heading__3H1r2\",\"rowSpacing\":\"HomeScreen_rowSpacing__1WYKW\",\"loaderContainer\":\"HomeScreen_loaderContainer__3sWOQ\",\"errorContainer\":\"HomeScreen_errorContainer__3tTW_\",\"paginationContainer\":\"HomeScreen_paginationContainer__1F-A1\",\"productCard\":\"HomeScreen_productCard__1kuP9\",\"button\":\"HomeScreen_button__1xQ01\"};"],"sourceRoot":""}